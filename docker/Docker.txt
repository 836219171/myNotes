Docker的优点，弹性伸缩，横向扩展。
Docker的三大部分，仓库 镜像 容器
具体执行过程为：
1. build  构建镜像 
1. ship   从仓库把镜像拉到本地    
2. run    在本地将镜像变成容器

linux下docker安装  链接：https://www.imooc.com/article/16448
内容：

1.检查内核版本，返回的值大于3.10即可。
$ uname -r
2.使用 sudo 或 root 权限的用户登入终端。

3.卸载旧版本(如果安装过旧版本的话)

$ yum remove docker \
      docker-common \
      docker-selinux \
      docker-engine
4.安装需要的软件包

#yum-util提供yum-config-manager功能
#另外两个是devicemapper驱动依赖的
$ yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
5.设置yum源

$ yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
6.安装docker

6.1. 安装最新版本

$ yum install -y docker-ce
6.2. 安装指定版本

#查询版本列表
$ yum list docker-ce --showduplicates | sort -r
已加载插件：fastestmirror, langpacks
已安装的软件包
可安装的软件包
 * updates: mirrors.163.com
Loading mirror speeds from cached hostfile
 * extras: mirrors.163.com
docker-ce.x86_64            17.09.1.ce-1.el7.centos            docker-ce-stable
docker-ce.x86_64            17.09.0.ce-1.el7.centos            docker-ce-stable
...
#指定版本安装(这里的例子是安装上面列表中的第二个)
$ yum install -y docker-ce-17.09.0.ce
7.启动docker

$ systemctl start docker.service
7.验证安装是否成功(有client和service两部分表示docker安装启动都成功了)

$ docker version
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:41:23 2017
 OS/Arch:      linux/amd64

Server:
 Version:      17.09.0-ce
 API version:  1.32 (minimum version 1.12)
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:42:49 2017
 OS/Arch:      linux/amd64
 Experimental: false

docker命令 
1 docker pull[options] name[:TAG] (指定版本，可以不写默认拉取最新镜像)      
2 docker images[options] [repository[:TAG]] 验证我们有哪些镜像，也可以验证pull是否成功
3 docker run[options] image[:TAG] [command] [arg]  运行时要执行哪些命令以及参数         [:options]

exec进入容器命令 
[root@bogon /]# docker ps      查看运行状态
CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS               NAMES
c720bc3a0d14        hub.c.163.com/library/nginx   "nginx -g 'daemon of…"   12 minutes ago      Up 12 minutes       80/tcp              silly_almeida
[root@bogon /]# docker exec -it c720bc3a0d14   bash

docker 网络类型 bridge 桥接  
                host  和主机一样  
				none 
				
重命名镜像
docker tag IMAGEID(镜像id) REPOSITORY:TAG（仓库：标签）
指定端口启动 docker run -p 8081:8080 tomcat:7
docker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.3-management


*********************windows下安装的坑 好坑啊~~~~************************
1 之前安装过git，然后quickstart不好使，需要在属性设置里的目标里面设置git的指向
2 启动不了default boot2docker iso is out-of-date报这个错，原因是启动时会去git更新版本，
解决方案是断网
出现如下错误时：
Error response from daemon: client is newer than server (client API version: 1.24, server API version: 1.23)

说明客户端和服务端的docker版本不一致，可以设置环境变量解决：
export DOCKER_API_VERSION=1.22

sudo sed -i "s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=http://04cf9625.m.daocloud.io |g" /var/lib/boot2docker/profile
docker ps [OPTIONS]
OPTIONS说明：

-a :显示所有的容器，包括未运行的。

-f :根据条件过滤显示的内容。

--format :指定返回值的模板文件。

-l :显示最近创建的容器。

-n :列出最近创建的n个容器。

--no-trunc :不截断输出。

-q :静默模式，只显示容器编号。

-s :显示总的文件大小。

过滤只显示几个内容
docker ps --format "{{.ID}}: {{.Command}}"

docker compose -f xxx.yml
-f指定要启动的yml文件名，然后启动,包括logs等命令都需要指定响应的yml文件

https://www.jianshu.com/p/f5c1dbb4a028 docker+Jenkins

https://www.cnblogs.com/Csir/p/6888474.html  docker常用命令



进入运行的容器
docker exec -it 容器id bash
docker run -it 容器名称 bash 如果不是root权限  加上-u root

使用docker run命令来启动容器，docker在后台运行的标准操作包括 
1.检查本地是否存在指定的镜像，不存在则从公有仓库下载
2.使用镜像创建并启动容器
3.分配一个文件系统，并在只读的镜像层外面挂载一层可读可写层
4.从宿主主机配置的网桥接口中桥接一个虚拟接口道容器中去
5.从地址池分配一个ip地址给容器
6.执行用户指定的应用程序
7.执行完毕之后容器被终止

查询docker内存占用情况  docker stats
查询docker容器的信息  docker inspect --format '{{.Id}}' registry:5000/elasticsearch:5.6

 docker删除镜像  docker rmi elasticsearch:5.5
 
 docker 私服搭建，创建完私服之后，会启动一个容器，
 docker ps |grep registry 默认是5000端口提供服务
 
 docker info 查看当前配置 
 
 遇到无法删除的镜像，docker stats查看占用其实都是0 这时候用docker rm -f删除掉
 

 
 b8e2b04fa92b

 registry:5000/robot-elasticsearch-test-v2:5.6
 
 查看docker网络状态 docker network ls
 docker创建自定义网络
 docker network create --driver bridge es_network
 docker network create --driver bridge ali_network

 Docker多容器启动顺序问题，可以使用health-check
 http://blog.joylau.cn/2018/12/19/Docker-Compose-StartOrder/
 demo：
server:
  image: 34.0.7.183:5000/joylau/traffic-service-server:1.2.0
  container_name: traffic-service-server
  ports:
    - 9368:9368
  restart: always
  volumes:
    - /Users/joylau/log/server:/home/liufa/app/server/logs
  environment:
    activeProfile: prod
  hostname: traffic-service-eureka
  healthcheck:
    test: "/bin/netstat -anp | grep 9367"
    interval: 10s
    timeout: 3s
    retries: 1
admin:
  image: 34.0.7.183:5000/joylau/traffic-service-admin:1.2.0
  container_name: traffic-service-admin
  ports:
    - 9335:9335
  restart: always
  volumes:
    - /Users/joylau/log/admin:/home/liufa/app/admin/logs
  environment:
    activeProfile: prod
  depends_on:
    server:
      condition: service_healthy
  hostname: traffic-service-admin
  links:
    - server:traffic-service-eureka
	
  查看网络连接 lsof -i
  
  docker run -td -p 8005:8005 --name=provider-small registry:5000/ali-balance-provider --network=host provider-small
  docker run -td -p 8006:8006 --name=provider-medium registry:5000/ali-balance-provider --network=host -e JAVA_OPTS='-Dquota=medium' provider-medium
  docker run -td -p 8007:8007 --name=provider-large registry:5000/ali-balance-provider --network=host provider-large
  
  docker run -td -p 9206:8087 --name=consumer registry:5000/ali-balance-consumer --network=host consumer


  docker run -it -p 8007:8007 --name=provider-large registry:5000/ali-balance-provider  provider-large
  
  docker删除镜像 tag=none的镜像
  docker images|grep none|awk ‘{print $3}’|xargs docker rmi 
  df617635b46f
  
  
 tcp {
    mode => "server"
    host => "0.0.0.0"
    port => 4567
    mode => "server"
    type => "microwiki"
    add_field => {
      "name" => "Routh"
    }
  }
  
ffb66cf97050

查询镜像历史版本号 https://hub.docker.com/r/library/

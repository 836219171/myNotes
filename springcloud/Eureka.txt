两个组件组成：
Eureka Server服务注册中心
Eureka Client 服务注册 

Client 轮询负载均衡器  提供服务故障的切换支持
系统中的其他微服务连接到Server并维持心跳连接

在springboot项目中启动类上要加上EnableEurekaServer
采用心跳的方式隔一段时间注册一次。

/********************************/
Eureka 高可用
1.两个eureka互相注册，服务一旦在其中一个注册，那么就会在两个eureka上注册。
2.为了防止其中一个宕掉而导致通信中断，client端需要将eureka全部注册。
3.三个eureka之间server端两两注册，client端全部注册 

/*********************************/
服务发现的两种模式
第一种：客户端模式
客户端发现模式也是优缺点分明。这种模式相对比较直接，而且除了服务注册表，没有其它改变的因素。除此之外，
因为客户端知道可用服务注册表信息，因此客户端可以通过使用哈希一致性（hashing consistently）变得更加聪明，更加有效的负载均衡。

而这种模式一个最大的缺点是需要针对不同的编程语言注册不同的服务，在客户端需要为每种语言开发不同的服务发现逻辑。

我们分析过客户端发现后，再看看服务端发现。


第二种 服务端模式

服务端发现模式也有优缺点。最大的优点是客户端无需关注发现的细节，客户端只需要简单的向负载均衡器发送请求，
实际上减少了编程语言框架需要完成的发现逻辑。而且，如上说所，某些部署环境免费提供以上功能。

这种模式也有缺陷，除非部署环境提供负载均衡器，否则负载均衡器是另外一个需要配置管理的高可用系统功能。





/***********************踩坑*************/
1.第一次报错，默认加载的时候既是客户端，又是服务端，服务端，服务端还未启动好，客户端就去找，所以报错。
也可以添加这个配置  eureka.client.register-with-eureka: false来解决
2.第二次报错  springboot默认创建的client程序没有web依赖，所以一直报 Unregistering JMX-exposed beans缺少启动的容器
添加web依赖后可以注册
3 注册instance-id的时候，还没有完全看明白源代码。
在我使用的springboot2.1的版本上。若是不写instance-id的话，
1 默认显示的是本机名，
2 只写instance-id，不写value的话，只显示注册的ip。
3 写instance-id的value的时候，按照网上说的应该可以动态注册ip和启动地址，但是我没有成功，不知道为啥。


redis事务
可以这么描述。本身没有事务，起到一个防止其他人插队的作用
linux 启动 redis-server /myredis/redis.conf
windows 启动 先运行startup.bat然后再打开一个命令行redis-cli -a 123123

使用方法
开始组队 multi
         set k1 v1
		 set k2 v2 
		 exec
在设置的过程中有一个步骤出错，若是编译阶段出错，则取消全部操作，若是运行阶段，则只取消此步骤
事务冲突问题
悲观锁:把并发的事务加锁变成串行。认为每次去拿数据的时候都会认为别人会修改。每次拿数据的时候都上锁，别人想拿数据就会block直到拿到它的锁。
传统数据库里面就用到了这种锁机制。例如表锁，行锁，读锁，写锁等操作，都是再操作之前加上锁。

乐观锁:加版本号，每次更新数据时都会比较一下版本号。   适合于多读少写的操作  redis就是利用这种check-and-set机制实现事务的。
乐观锁解决的问题。1 并行的用户只有一个成功，其他的都失败。顺序有问题。
                  2 效率不行加lua脚本效率高，过多的网络传输次数导致效率下降
watch key 加锁
unwatch 解锁
redis事务没有原子性。没有回滚操作


redis持久化
1 RDB方式
redis会单独创建一个子进程fork来执行持久化，会先将一个数据写入临时文件中。待持久化数据过程结束了，再用这个临时文件替换上次持久化好的文件。
整个过程中，主进程是不进行任何io操作的。RDB方式比AOF方式效率更高，缺点是不能保证数据的完整性，最后一次持久化的数据可能丢失。
fork子进程用到了写时复制技术
优点是存储速度快，节省磁盘空间

2 aof方式
将redis执行过写的指令以日志的形式记录下来，redis启动之初会将写指令从头到尾执行一遍


redis主从复制

用处：读写分离，性能提升。
       容灾快速恢复

	   
哨兵池

redis集群，1 代理中间件
           2 redis cluter3.0
		  
保证redis和数据库同步，用canal，阿里的工具，会在mysql中设置触发器
		   